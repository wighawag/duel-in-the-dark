// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "../circuits/verifier.sol";
import "forge-std/Test.sol";

contract CounterTest is Test {
    PlonkVerifier verifier;

    function setUp() public {
        verifier = new PlonkVerifier();
    }

    function testVerify() public {
        uint256[] memory publicSignals = new uint256[](1);
        publicSignals[
            0
        ] = 0x110d778eaf8b8ef7ac10f8ac239a14df0eb292a8d1b71340d527b26301a9ab08;
        bytes
            memory proof = hex"0ecfac70087fcd11e5cd899015dbddf262dfc5d77dd4d705d7f31563747cecfb05d0e793368fd192994460d8fb83ac77e7ad274c72ba2b217c46c2deaf95cfd71e4ac9905c62485a48bce2cd9cbf56103d47c52549149bae3ff0fe59f212fca3031cd95ebc14a81328a5e3491a8b86be06310fe1b734651fb2534ed0da7d3bf921e7193d9a24a4478dcfb116500301f76ed509804c54e41a797c244bea0742110b694b83f80401c5d8e9bc8fa9a10286b1548f55061a0cc6cd78f7aefe0a9e531e1109a6cba465aaedd49e3226207d632e84af8c337c250e53d7d98379109c8c1aad7d8b9670818fbb4dd7da6419aa3db5892c5dd799ee5536a38b92123557590a6f740d3a33f7b5a88cfcaffae6094d9168fc251fc25378a6e929913130cabe11230bb6206a9264b52a2a8f00ea2d26a1e57174e8451ed2362dff9720984b913040b758fbcd624a9a7dfe67477e80ddfc4417f1c6c5b74db02fc276f1d56612103e5192631dbab08c9e897e229582602c0659b7c70a9d4f67242d8c104798ab1c16724b127a032993797547b3b187c5162bd742b1ed00fefaddbcfaf2e3311a299c8f598cf11ee94bad331373e772fabe16ec4fabc09e4bb09fafe2e64424a227bf6770fa5f155c6395182a6ba8689c2401225892ff256f8c4f85aebe0334f82f1529bdfafd8c9361942d559428e2dbcf326881f4fcf934baa6d9a749d506e113ba74015fe746f7b1caf6bb670050d0ba8dcb46918f1cf8c580552b80facc9705464cff3d4cc944d73d3d094f11baafb8b0c20e82ba6bc0d7b5be40b115aa4203148410f909ed9c19041aaf021fc6c0575216cfb3947d7e7c30e24bc3a9d239080d9b8b28d584a09b7d731348043ecf1246d18c7c7d7dda407e47a2050a647f2ce7d1a631f244488bb11ab577bab37c0e8c41b874174e84a48ead88a4f10e790d0fc3410877589ff7d6e5b180743df3d58911f4289f14aeaea91019aad6ce0b1d3c663fbca7247ac1578c5c25da51deb24af6eee1aa39a05de9d4636f4ef7af11694025fbe3ff48fddc47736c1048898ea2f1a5e0f02b36c847c7c9fdfdc08508a84c48fa48090765bb37d7232d138a11f6eb0ffc123c11e1f73907381d7f97";
        bool verified = verifier.verifyProof(proof, publicSignals);
        assertEq(verified, true);
    }
}
