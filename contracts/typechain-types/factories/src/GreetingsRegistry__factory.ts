/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GreetingsRegistry,
  GreetingsRegistryInterface,
} from "../../src/GreetingsRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "initialPrefix",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint24",
        name: "dayTimeInSeconds",
        type: "uint24",
      },
    ],
    name: "MessageChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "lastGreetingOf",
    outputs: [
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "messages",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint24",
            name: "dayTimeInSeconds",
            type: "uint24",
          },
        ],
        internalType: "struct GreetingsRegistry.Message",
        name: "userMsg",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "initialPrefix",
        type: "string",
      },
    ],
    name: "postUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "prefix",
    outputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint24",
        name: "dayTimeInSeconds",
        type: "uint24",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50604051620014b6380380620014b68339818101604052810190620000369190620002ce565b62000047816200004e60201b60201c565b5062000638565b5f6200005f6200012160201b60201c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d25773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103556200010b565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200010a575f80fd5b5b81600190816200011c919062000554565b505050565b5f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620001aa8262000162565b810181811067ffffffffffffffff82111715620001cc57620001cb62000172565b5b80604052505050565b5f620001e062000149565b9050620001ee82826200019f565b919050565b5f67ffffffffffffffff82111562000210576200020f62000172565b5b6200021b8262000162565b9050602081019050919050565b5f5b83811015620002475780820151818401526020810190506200022a565b5f8484015250505050565b5f620002686200026284620001f3565b620001d5565b9050828152602081018484840111156200028757620002866200015e565b5b6200029484828562000228565b509392505050565b5f82601f830112620002b357620002b26200015a565b5b8151620002c584826020860162000252565b91505092915050565b5f60208284031215620002e657620002e562000152565b5b5f82015167ffffffffffffffff81111562000306576200030562000156565b5b62000314848285016200029c565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200036c57607f821691505b60208210810362000382576200038162000327565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003e67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003a9565b620003f28683620003a9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200043c6200043662000430846200040a565b62000413565b6200040a565b9050919050565b5f819050919050565b62000457836200041c565b6200046f620004668262000443565b848454620003b5565b825550505050565b5f90565b6200048562000477565b620004928184846200044c565b505050565b5b81811015620004b957620004ad5f826200047b565b60018101905062000498565b5050565b601f8211156200050857620004d28162000388565b620004dd846200039a565b81016020851015620004ed578190505b62000505620004fc856200039a565b83018262000497565b50505b505050565b5f82821c905092915050565b5f6200052a5f19846008026200050d565b1980831691505092915050565b5f62000544838362000519565b9150826002028217905092915050565b6200055f826200031d565b67ffffffffffffffff8111156200057b576200057a62000172565b5b62000587825462000354565b62000594828285620004bd565b5f60209050601f831160018114620005ca575f8415620005b5578287015190505b620005c1858262000537565b86555062000630565b601f198416620005da8662000388565b5f5b828110156200060357848901518255600182019150602085019450602081019050620005dc565b868310156200062357848901516200061f601f89168262000519565b8355505b6001600288020188555050505b505050505050565b610e7080620006465f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806303433b8e146100595780634c2dd808146100895780635fdd59f8146100a557806375dadb32146100d5578063b1441ce6146100f3575b5f80fd5b610073600480360381019061006e919061061c565b61010f565b60405161008091906106d1565b60405180910390f35b6100a3600480360381019061009e919061078a565b6101dd565b005b6100bf60048036038101906100ba919061061c565b6102fe565b6040516100cc91906108a3565b60405180910390f35b6100dd61040f565b6040516100ea91906106d1565b60405180910390f35b61010d600480360381019061010891906109eb565b61049f565b005b60605f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01805461015a90610a5f565b80601f016020809104026020016040519081016040528092919081815260200182805461018690610a5f565b80156101d15780601f106101a8576101008083540402835291602001916101d1565b820191905f5260205f20905b8154815290600101906020018083116101b457829003601f168201915b50505050509050919050565b5f600184846040516020016101f493929190610b4f565b604051602081830303815290604052905060405180606001604052808281526020014281526020018362ffffff168152505f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0190816102749190610d11565b50602082015181600101556040820151816002015f6101000a81548162ffffff021916908362ffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff167f4650083cdd22f274f233c0ae8b1e5a23037ced29923011d703349cdeeface1af4283856040516102f093929190610dfe565b60405180910390a250505050565b61030661058d565b5f808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f8201805461035c90610a5f565b80601f016020809104026020016040519081016040528092919081815260200182805461038890610a5f565b80156103d35780601f106103aa576101008083540402835291602001916103d3565b820191905f5260205f20905b8154815290600101906020018083116103b657829003601f168201915b5050505050815260200160018201548152602001600282015f9054906101000a900462ffffff1662ffffff1662ffffff16815250509050919050565b60606001805461041e90610a5f565b80601f016020809104026020016040519081016040528092919081815260200182805461044a90610a5f565b80156104955780601f1061046c57610100808354040283529160200191610495565b820191905f5260205f20905b81548152906001019060200180831161047857829003601f168201915b5050505050905090565b5f6104a8610565565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105195773ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610355610551565b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610550575f80fd5b5b81600190816105609190610d11565b505050565b5f7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354905090565b6040518060600160405280606081526020015f81526020015f62ffffff1681525090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105eb826105c2565b9050919050565b6105fb816105e1565b8114610605575f80fd5b50565b5f81359050610616816105f2565b92915050565b5f60208284031215610631576106306105ba565b5b5f61063e84828501610608565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561067e578082015181840152602081019050610663565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6106a382610647565b6106ad8185610651565b93506106bd818560208601610661565b6106c681610689565b840191505092915050565b5f6020820190508181035f8301526106e98184610699565b905092915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112610712576107116106f1565b5b8235905067ffffffffffffffff81111561072f5761072e6106f5565b5b60208301915083600182028301111561074b5761074a6106f9565b5b9250929050565b5f62ffffff82169050919050565b61076981610752565b8114610773575f80fd5b50565b5f8135905061078481610760565b92915050565b5f805f604084860312156107a1576107a06105ba565b5b5f84013567ffffffffffffffff8111156107be576107bd6105be565b5b6107ca868287016106fd565b935093505060206107dd86828701610776565b9150509250925092565b5f82825260208201905092915050565b5f61080182610647565b61080b81856107e7565b935061081b818560208601610661565b61082481610689565b840191505092915050565b5f819050919050565b6108418161082f565b82525050565b61085081610752565b82525050565b5f606083015f8301518482035f86015261087082826107f7565b91505060208301516108856020860182610838565b5060408301516108986040860182610847565b508091505092915050565b5f6020820190508181035f8301526108bb8184610856565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6108fd82610689565b810181811067ffffffffffffffff8211171561091c5761091b6108c7565b5b80604052505050565b5f61092e6105b1565b905061093a82826108f4565b919050565b5f67ffffffffffffffff821115610959576109586108c7565b5b61096282610689565b9050602081019050919050565b828183375f83830152505050565b5f61098f61098a8461093f565b610925565b9050828152602081018484840111156109ab576109aa6108c3565b5b6109b684828561096f565b509392505050565b5f82601f8301126109d2576109d16106f1565b5b81356109e284826020860161097d565b91505092915050565b5f60208284031215610a00576109ff6105ba565b5b5f82013567ffffffffffffffff811115610a1d57610a1c6105be565b5b610a29848285016109be565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610a7657607f821691505b602082108103610a8957610a88610a32565b5b50919050565b5f81905092915050565b5f819050815f5260205f209050919050565b5f8154610ab781610a5f565b610ac18186610a8f565b9450600182165f8114610adb5760018114610af057610b22565b60ff1983168652811515820286019350610b22565b610af985610a99565b5f5b83811015610b1a57815481890152600182019150602081019050610afb565b838801955050505b50505092915050565b5f610b368385610a8f565b9350610b4383858461096f565b82840190509392505050565b5f610b5a8286610aab565b9150610b67828486610b2b565b9150819050949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610bd07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b95565b610bda8683610b95565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610c15610c10610c0b8461082f565b610bf2565b61082f565b9050919050565b5f819050919050565b610c2e83610bfb565b610c42610c3a82610c1c565b848454610ba1565b825550505050565b5f90565b610c56610c4a565b610c61818484610c25565b505050565b5b81811015610c8457610c795f82610c4e565b600181019050610c67565b5050565b601f821115610cc957610c9a81610b74565b610ca384610b86565b81016020851015610cb2578190505b610cc6610cbe85610b86565b830182610c66565b50505b505050565b5f82821c905092915050565b5f610ce95f1984600802610cce565b1980831691505092915050565b5f610d018383610cda565b9150826002028217905092915050565b610d1a82610647565b67ffffffffffffffff811115610d3357610d326108c7565b5b610d3d8254610a5f565b610d48828285610c88565b5f60209050601f831160018114610d79575f8415610d67578287015190505b610d718582610cf6565b865550610dd8565b601f198416610d8786610b74565b5f5b82811015610dae57848901518255600182019150602085019450602081019050610d89565b86831015610dcb5784890151610dc7601f891682610cda565b8355505b6001600288020188555050505b505050505050565b610de98161082f565b82525050565b610df881610752565b82525050565b5f606082019050610e115f830186610de0565b8181036020830152610e238185610699565b9050610e326040830184610def565b94935050505056fea2646970667358221220036a163bad2e9484d66ecff41ab8b30f67de876514b1696287655c0acb76a3a164736f6c63430008140033";

type GreetingsRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreetingsRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GreetingsRegistry__factory extends ContractFactory {
  constructor(...args: GreetingsRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialPrefix: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialPrefix, overrides || {});
  }
  override deploy(
    initialPrefix: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialPrefix, overrides || {}) as Promise<
      GreetingsRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GreetingsRegistry__factory {
    return super.connect(runner) as GreetingsRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreetingsRegistryInterface {
    return new Interface(_abi) as GreetingsRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GreetingsRegistry {
    return new Contract(address, _abi, runner) as unknown as GreetingsRegistry;
  }
}
